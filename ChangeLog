2010-09-23  James Morris  <james@jwm-art.net>

    * gui_grid.c: using cairo_scale instead of performing scaling
      calculations.

    * gui_grid.c: (gui_grid_show): drawing area has scrollbars.
      the drawing area is added to a viewport which in turn is added
      to a scrolled_window - about time.

2010-08-15  James Morris  <james@jwm-art.net>

    * grid_boundary.c (grbound_private_new): channel no. innitialized.
    * grid_boundary.c (grbound_private_dup): channel no copied to dest
      these fixed the sudden-silence bug. that this bug did not occurr
      more often was down to luck.

    * real_time_data.c (rtdata_update): changed sleep loop to single.
      this fixed a nasty infinite-loop bug.

    * gui_grid.c (*): various GUI improvements. added boundary resize
      capability via right-mouse click/release.


2010-08-14  James Morris  <james@jwm-art.net>

    * freespace_state.c (fs_find_row_smart_l2r): cornercase bug fixed.
      this functions was fitting boxes whose right most edge lay beyond
      the right most edge of the boundary. fixed by changing:
          if (x >= endx && xoffset < endxoffset)
      to 
          if (x >= endx && xoffset <= endxoffset)
      strangely, this error did not turn up in the test data setup in
      the old isolated development version of the freespace state
      (then called freespace_grid) outside of the boxyseq tree.


2010-08-13  James Morris  <james@jwm-art.net>

    * Spent the morning being driven around by my Dad trying to find a 
      second hand wheel, tyre, and wheel nuts for my car. Some son of a 
      bitch stole a wheel off my car last night. Thanks Dad for coming
      to the rescue. Now I can get to work... Hurray :| (So most of 
      the changes listed today were done yesterday/last night.

    * boxy_sequencer*.*: replaced array based storage of patterns,
      grid boundaries, and midi out ports with llist implementations.

    * boxy_sequencer (boxyseq_rt_play): this function is cleaned up
      by removal or arrays.

    * grbound_manager.*
      moport_manager.*
      pattern_manager.*: these modules are used to replace the array
      storage mentioned in connection with boxy_sequencer. they handle
      creation/destruction of the data and store data in a llist. they
      also convert the llist to a pointer array.
      finally, they provide functions to perform operations in 
      connection with the RT thread (ie play/output etc).

    * various other changes and tweaks as a result of above, and other
      stuff i've forgotten and don't have time to remember because i
      must forget all about this and go to work where i will be bored
      shitless packing plastic punnets/trays/etc for eight hours.
      

2010-08-11  James Morris  <james@jwm-art.net>

    * real_time_data.c (rtdata_update): rt->ptr_free zeroed out
      zeroing out of rt->ptr_free prevents duplicate freeing of
      memory in rtdata_free.

    * real_time_data.c (struct real_time_data): data now const.

    * grid_boundary.c (grbound_rtdata_get_cb): now returns data!


2010-08-10  James Morris  <james@jwm-art.net>

    * grid_boundary.c (grbound_*): boundary now using the real_time_data
      update mechanism... (Check MSG displayed by boxyseq when run :-)


2010-08-09  James Morris  <james@jwm-art.net>

    * real_time_data.c (rtdata_*): new generic real time dat module.
      this uses glib atomic functions and is a generic version of the
      rt update process from (the old versions of) pattern.c.

    * pattern.c (*): refactoring. plist moved to event_list.c
      the data structure which specializes llist for events was previously
      called plist and resided within pattern.c. it is not called evlist and
      resides in event_list.c.  new code to handle the rt update process
      using the new generic mechanism and glib atomic functions. other
      minor maintanence jobs.


2010-08-04  James Morris  <james@jwm-art.net>

    * Lots, again and again.


2010-07-31  James Morris  <james@jwm-art.net>

    * boxy_sequencer.c (boxyseq_rt_init_jack_cycle): new function.
    calls moport_rt_init_jack_cycle.

    * boxy_sequencer.c (boxyseq_rt_play): code to detect 'shutdown'
    events. when detected calls boxyseq_rt_clear and sets 'quitting'
    flag so no further event processing ever takes place from that point
    on.

    * boxy_sequencer.c (boxyseq_rt_clear): calls moport_empty on all
    midi out ports.

    * boxy_sequencer.c (boxyseq_shutdown): initiates the shutdown 
    procedure.

2010-07-30  James Morris  <james@jwm-art.net>

    * grid_boundary.c (grid_remove_events): added calls to clear remaining
    buffers.

2010-07-29  James Morris  <james@jwm-art.net>

    * jack_midi.c (all): deleted/moved to jack_process.c

    * jack_transport.c (all): deleted/moved to jack_process.c

    * jack_process.c (all): new file is a conglomeration of the code
    formerly found in jack_midi.c and jack_transport.c. The API is now
    more concise with less implementation leaking into it.

    * include/jack_process_data.c: new file, contains a single data 
    structure used by jack_process.c implementation. Is a merger of the
    two data structures originally contained in jack_midi.c and 
    jack_transport.c.

    * jack_process.c (jd_rt_poll, jack_process_callback): additional
    stopped/started detection, new transport reposition detection. These
    trigger a call to boxyseq_rt_clear to wipe all event data from buffers
    etc, as well as disabling the duplication/dropped ticks messages on
    transport repositions.

    * jack_process.c (jack_process_callback): some playhead fiddling
    added to prevent dropped ticks when trying to synchronise with other
    timebase master applications.

*****        2010-07-29 was first ChangeLog entry for BoxySeq        *****
