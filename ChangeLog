2010-08-11  James Morris  <james@jwm-art.net>

    * real_time_data.c (rtdata_update): rt->ptr_free zeroed out
      zeroing out of rt->ptr_free prevents duplicate freeing of
      memory in rtdata_free.

    * real_time_data.c (struct real_time_data): data now const.

    * grid_boundary.c (grbound_rtdata_get_cb): now returns data!


2010-08-10  James Morris  <james@jwm-art.net>

    * grid_boundary.c (grbound_*): boundary now using the real_time_data
      update mechanism... (Check MSG displayed by boxyseq when run :-)


2010-08-09  James Morris  <james@jwm-art.net>

    * real_time_data.c (rtdata_*): new generic real time dat module.
      this uses glib atomic functions and is a generic version of the
      rt update process from (the old versions of) pattern.c.

    * pattern.c (*): refactoring. plist moved to event_list.c
      the data structure which specializes llist for events was previously
      called plist and resided within pattern.c. it is not called evlist and
      resides in event_list.c.  new code to handle the rt update process
      using the new generic mechanism and glib atomic functions. other
      minor maintanence jobs.


2010-08-04  James Morris  <james@jwm-art.net>

    * Lots, again and again.


2010-07-31  James Morris  <james@jwm-art.net>

    * boxy_sequencer.c (boxyseq_rt_init_jack_cycle): new function.
    calls moport_rt_init_jack_cycle.

    * boxy_sequencer.c (boxyseq_rt_play): code to detect 'shutdown'
    events. when detected calls boxyseq_rt_clear and sets 'quitting'
    flag so no further event processing ever takes place from that point
    on.

    * boxy_sequencer.c (boxyseq_rt_clear): calls moport_empty on all
    midi out ports.

    * boxy_sequencer.c (boxyseq_shutdown): initiates the shutdown 
    procedure.

2010-07-30  James Morris  <james@jwm-art.net>

    * grid_boundary.c (grid_remove_events): added calls to clear remaining
    buffers.

2010-07-29  James Morris  <james@jwm-art.net>

    * jack_midi.c (all): deleted/moved to jack_process.c

    * jack_transport.c (all): deleted/moved to jack_process.c

    * jack_process.c (all): new file is a conglomeration of the code
    formerly found in jack_midi.c and jack_transport.c. The API is now
    more concise with less implementation leaking into it.

    * include/jack_process_data.c: new file, contains a single data 
    structure used by jack_process.c implementation. Is a merger of the
    two data structures originally contained in jack_midi.c and 
    jack_transport.c.

    * jack_process.c (jd_rt_poll, jack_process_callback): additional
    stopped/started detection, new transport reposition detection. These
    trigger a call to boxyseq_rt_clear to wipe all event data from buffers
    etc, as well as disabling the duplication/dropped ticks messages on
    transport repositions.

    * jack_process.c (jack_process_callback): some playhead fiddling
    added to prevent dropped ticks when trying to synchronise with other
    timebase master applications.

*****        2010-07-29 was first ChangeLog entry for BoxySeq        *****
